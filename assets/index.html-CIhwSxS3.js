import{_ as c,c as h,a as l,e as a,b as s,w as d,r as t,o as k,d as e}from"./app-CY5as1Zw.js";const p={};function F(u,i){const r=t("LinkCard"),n=t("CardGrid"),o=t("ImageCard");return k(),h("div",null,[i[1]||(i[1]=l(`<h3 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>Docker</span></a></h3><blockquote><p>Docker 是一个开源平台，用于容器化应用程序。它将应用及其依赖打包成一个轻量级、可移植的容器，可以在任何环境中一致运行。</p></blockquote><p>官网： <a href="https://docs.docker.com" target="_blank" rel="noopener noreferrer">Docker</a></p><ul><li>镜像（image）：相当于一个模板，通过这个模板可以创建多个容器</li><li>容器（container）：通过镜像进行创建，容器化应用程序</li><li>仓库（repository）：存放镜像的地方</li></ul><div class="hint-container important"><p class="hint-container-title">重要</p><p>Docker的工作机制： Docker的守护进程运行在宿主机上，可以通过宿主机的与其端口映射，访问到所创建的docker容器。 ### Docker Hub <a href="https://hub.docker.com/" target="_blank" rel="noopener noreferrer">Docker Hub</a> 是 Docker 官方提供的一个云平台，用于存储和分享 Docker 镜像。 它是 Docker 的中央仓库，用户可以在上面查找、下载、上传自己的 Docker 镜像。</p></div><h3 id="docker下载-centos" tabindex="-1"><a class="header-anchor" href="#docker下载-centos"><span>Docker下载(CentOS)</span></a></h3><p>CentOS安装Docker： <a href="https://docs.docker.com/engine/install/centos/" target="_blank" rel="noopener noreferrer">Install Docker Engine on CentOS</a></p><blockquote><ol><li>卸载旧版本Docker</li></ol><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remove</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                 docker-client</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                 docker-client-latest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                 docker-common</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                 docker-latest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                 docker-latest-logrotate</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                 docker-logrotate</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                 docker-engine</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>设置 Docker 仓库</li></ol><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum-utils</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum-config-manager</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add-repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>安装 Docker</li></ol><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-ce-cli</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> containerd.io</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="4"><li>启动 Docker 服务</li></ol><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>验证 Docker 安装</li></ol><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="6"><li>测试运行hello-world容器</li></ol><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello-world</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="https://cdn.jsdelivr.net/gh/Pai3141/PictureBed@main/img/docker-e2.jpg" alt="img"></p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>若出现 如下错误： <img src="https://cdn.jsdelivr.net/gh/Pai3141/PictureBed@main/img/docker-e1.jpg" alt="img"> 可尝试如下解决方法（配置镜像加速地址）：</p><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tee</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/docker/daemon.json</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;EOF&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;registry-mirrors&quot;: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://do.nark.eu.org&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://dc.j8.work&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://docker.m.daocloud.io&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://dockerproxy.com&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://docker.mirrors.ustc.edu.cn&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://docker.nju.edu.cn&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></blockquote><h3 id="关于docker的常见命令" tabindex="-1"><a class="header-anchor" href="#关于docker的常见命令"><span>关于Docker的常见命令</span></a></h3><p>下面是您提供的 Docker 命令的 Markdown 表格格式：</p><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td><code>docker info</code></td><td>显示 Docker 系统的详细信息</td></tr><tr><td><code>docker version</code></td><td>查看 Docker 版本</td></tr><tr><td><code>docker images</code></td><td>查看镜像</td></tr><tr><td><code>docker pull xxx[:tag(版本)]</code></td><td>下载镜像（不写版本，默认下载 latest）</td></tr><tr><td><code>docker rmi -f [IMAGE-ID]</code></td><td>删除镜像</td></tr><tr><td><code>docker ps</code></td><td>查看容器</td></tr><tr><td><code>docker run [可选参数] image</code></td><td>运行容器（可选参数：<code>--name</code> 设置容器名字，<code>-d</code> 后台运行，<code>-it</code> 交互方式，<code>-p</code> 端口映射）</td></tr><tr><td><code>docker exec -it container_id /bin/bash</code></td><td>进入容器内部</td></tr><tr><td><code>exit/Ctrl + P + Q</code></td><td>停止容器并退出/不停止容器退出</td></tr><tr><td><code>docker rm container-id</code></td><td>删除指定容器</td></tr><tr><td><code>docker start container-id</code></td><td>启动容器</td></tr><tr><td><code>docker restart container-id</code></td><td>重启容器</td></tr><tr><td><code>docker stop container-id</code></td><td>停止容器</td></tr><tr><td><code>docker kill container-id</code></td><td>强制停止容器</td></tr></tbody></table><h3 id="暴露端口-访问容器" tabindex="-1"><a class="header-anchor" href="#暴露端口-访问容器"><span>暴露端口，访问容器</span></a></h3><ol><li>开放阿里云安全组端口8080</li><li>配置宿主机防火墙8080</li><li>映射容器端口80到宿主机端口8888</li></ol><h3 id="docker-desktop" tabindex="-1"><a class="header-anchor" href="#docker-desktop"><span>Docker Desktop</span></a></h3><h4 id="docker-desktop下载" tabindex="-1"><a class="header-anchor" href="#docker-desktop下载"><span>Docker Desktop下载</span></a></h4>`,15)),a(n,null,{default:d(()=>[a(r,{icon:"skill-icons:docker",title:"Docker Desktop",href:"https://www.docker.com/get-started/"})]),_:1}),i[2]||(i[2]=s("h4",{id:"run-a-new-container",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#run-a-new-container"},[s("span",null,"Run a new container")])],-1)),a(n,null,{default:d(()=>[a(o,{image:"https://cdn.jsdelivr.net/gh/Pai3141/PictureBed@main/img/docker-options.png",width:"120%",title:"Options"}),i[0]||(i[0]=s("div",null,[e("Docker 容器配置中的几个可选参数："),s("br"),e(" 1. Container name：容器名称。若不提供，Docker 会随机生成一个。"),s("br"),s("br"),e(" 2. Ports：配置端口映射，将容器的某个端口映射到宿主机的某个端口，允许外部访问容器服务。"),s("br"),s("br"),e(" 3. Volumes：设置数据卷，用于将容器内的路径与宿主机路径关联，实现数据持久化。"),s("br"),s("br"),e(" 4. Environment variables：配置环境变量，为容器内的应用传递配置参数。")],-1))]),_:1}),i[3]||(i[3]=l('<div class="hint-container note"><p class="hint-container-title">注</p><p>docker run --name mysql-container -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=my-secret-pw -e MYSQL_DATABASE=mydb mysql:latest</p><ul><li>Container name: mysql-container</li><li>Ports: 容器3306端口 --&gt; 映射到宿主机端口3306</li><li>Environment variables: my-secret-pw为MySQL的root用户密码; mydb为MySQL数据库名称</li><li>Image: mysql:latest为镜像名称</li></ul></div><h3 id="volumes-configuration" tabindex="-1"><a class="header-anchor" href="#volumes-configuration"><span>Volumes Configuration</span></a></h3><p>Docker Desktop中的Volumes有两种主要类型：</p><blockquote><ol><li><p><strong>命名卷（Named Volumes）</strong>：</p><ul><li>Docker自动管理的存储卷，数据保存在Docker指定的地方。</li><li>使用时通过名称引用，数据不会因容器删除而丢失。</li><li>匿名挂载（系统分配）和具名挂载（用户命名）</li><li>一般来说都在这个目录下(linux)：/var/lib/docker/volume/xxx</li></ul></li><li><p><strong>主机卷（Host Volumes）</strong>：</p><ul><li>将宿主机目录挂载到容器中，数据直接存储在宿主机文件系统上。</li><li>容器和宿主机共享数据，适用于需要直接访问宿主机文件的情况。</li></ul></li></ol><div class="hint-container important"><p class="hint-container-title">重要</p><p>命名卷由Docker管理，适合持久化数据；主机卷则直接与宿主机文件系统关联，适用于共享文件。<code>命名卷</code>写名称；<code>主机卷</code>写宿主机路径。</p></div></blockquote><h3 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile"><span>Dockerfile</span></a></h3><p>Dockerfile 是一个文本文件，包含了一系列的指令，用于定义如何构建一个 Docker 镜像。 它的作用是自动化地描述镜像构建的过程，包括指定基础镜像、安装软件、配置环境、复制文件、定义工作目录、暴露端口、指定容器启动命令等。 通过 Dockerfile，开发者可以方便地构建和部署容器化应用，确保环境一致性和自动化构建。</p>',6))])}const g=c(p,[["render",F],["__file","index.html.vue"]]),v=JSON.parse('{"path":"/article/rbe4xwwo/","title":"🐳Docker","lang":"zh-CN","frontmatter":{"title":"🐳Docker","createTime":"2025/02/16 17:03:52","permalink":"/article/rbe4xwwo/","tags":["Docker"]},"headers":[],"readingTime":{"minutes":4.03,"words":1210},"git":{"updatedTime":1739889887000,"contributors":[{"name":"paiad","username":"paiad","email":"2369538173@qq.com","commits":5,"avatar":"https://avatars.githubusercontent.com/paiad?v=4","url":"https://github.com/paiad"}]},"filePathRelative":"learning/multi/Docker.md","categoryList":[{"id":"25a9ac","sort":10005,"name":"learning"},{"id":"e7f12e","sort":10007,"name":"multi"}]}');export{g as comp,v as data};
